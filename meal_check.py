import streamlit as st

st.set_page_config(page_title="Meal Analysis", layout="centered")
st.title("Analyse de ton repas")
st.markdown("Cette application √©value ton repas selon ton r√©pas")

st.header("1. T√©l√©verse une photo (optionnel)")
st.file_uploader("Image du repas (non utilis√©e pour l‚Äôinstant)", type=["jpg", "jpeg", "png"])

st.header("2. S√©lectionne les aliments pr√©sents dans ton repas")
aliments = [
    "Tofu", "≈íuf", "Saumon", "Poulet", "Pois chiches", "Lentilles", "Riz basmati", "Quinoa",
    "Pain de seigle", "Pain complet", "Avocat", "Amandes", "Graines de courge", "Brocolis", "Courgettes",
    "√âpinards", "Fenouil", "Carottes", "Betteraves", "Tomates", "Concombres", "Cerises", "Myrtilles",
    "Poire", "Pomme", "Dattes", "Fromage blanc", "Yaourt nature", "Gyoza v√©g√©tarien", "Aubergines"
]
selection = st.multiselect("Quels aliments sont pr√©sents ?", aliments)

st.header("3. R√©sultat de l'analyse")

def analyse(selection):
    score = 0
    remarques = []

    proteines_veg = {"Tofu", "Pois chiches", "Lentilles"}
    if any(a in proteines_veg for a in selection):
        score += 1
        remarques.append("‚úî Bon apport en prot√©ines v√©g√©tales.")

    proteines_anim = {"≈íuf", "Saumon", "Poulet"}
    if any(a in proteines_anim for a in selection):
        score += 0.5
        remarques.append("‚ÑπÔ∏è Prot√©ines animales pr√©sentes (√† mod√©rer si prot√©inurie).")

    purines = {"Lentilles", "Pois chiches", "Saumon", "Dattes"}
    if any(a in purines for a in selection):
        score -= 0.5
        remarques.append("‚ö†Ô∏è Pr√©sence d‚Äôaliments mod√©r√©ment riches en purines.")

    bons_lipides = {"Avocat", "Amandes", "Graines de courge"}
    if any(a in bons_lipides for a in selection):
        score += 1
        remarques.append("‚úî Pr√©sence de bons lipides anti-inflammatoires.")

    alcalins = {"√âpinards", "Fenouil", "Concombres", "Betteraves", "Courgettes"}
    if any(a in alcalins for a in selection):
        score += 1
        remarques.append("‚úî Aliments alcalinisants pr√©sents, bon pour les reins.")

    antioxydants = {"Cerises", "Myrtilles", "Poire", "Pomme"}
    if any(a in antioxydants for a in selection):
        score += 1
        remarques.append("‚úî Fruits riches en antioxydants pr√©sents.")

    if score >= 3.5:
        conclusion = "‚úÖ Repas √©quilibr√© et bien adapt√© √† ton r√©gime."
    elif 2 <= score < 3.5:
        conclusion = "üü° Repas correct, mais quelques ajustements possibles."
    else:
        conclusion = "üî¥ Ce repas est √† mod√©rer selon tes objectifs sant√©."

    return conclusion, remarques

if selection:
    conclusion, remarques = analyse(selection)
    st.subheader("üßæ Conclusion :")
    st.success(conclusion)

    st.subheader("üîé D√©tails :")
    for r in remarques:
        st.markdown(f"- {r}")
else:
    st.info("üëâ S√©lectionne les aliments pour afficher l‚Äôanalyse.")
